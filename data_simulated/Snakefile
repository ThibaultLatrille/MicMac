import numpy as np
import os

ROOT = os.path.abspath('../../..')
FOLDER = os.path.abspath('.')

configfile: 'config.yaml'

REPLICATES = [int(i) for i in np.linspace(config["min_number_loci"], config["max_number_loci"], config["nb_genes"])]
SIMULATOR_PARAMS = {s: " ".join(['--{0} {1}'.format(k, v) for k, v in d.items() if k != "model"]) for s, d in config["simulators"].items()}
SIMULATOR_PARAMS["core"] = " ".join(['--{0} {1}'.format(k, v) for k, v in config["core"].items()])

rule all:
    input:
        f"{FOLDER}/plot_scatter_stats.pdf",
        f"{FOLDER}/plot_scatter.pdf",

rule run_simulations:
    input:
        exec= lambda wildcards: f'{ROOT}/simulator/build/{config["simulators"][wildcards.simulator]["model"]}',
        tree=f'{ROOT}/simulator/{config["tree"]}'
    output:
        tsv=f"{FOLDER}/{{simulator}}/replicate_{{scaling}}.tsv.gz",
        nhx=f"{FOLDER}/{{simulator}}/replicate_{{scaling}}.nhx.gz"
    params:
        file=f"{FOLDER}/{{simulator}}/replicate_{{scaling}}",
        folder= lambda wildcards: f"{FOLDER}/{wildcards.simulator}",
        simulator= lambda wildcards: "{0} {1}".format(SIMULATOR_PARAMS["core"], SIMULATOR_PARAMS[wildcards.simulator])
    shell:
        'mkdir -p {params.folder} && {input.exec} --tree {input.tree} {params.simulator} --number_loci {wildcards.scaling} --output {params.file} && gzip {params.file}.tsv  && gzip {params.file}.nhx'

rule plot_trajectory:
    input:
        exp=rules.run_simulations.output.tsv,
        script=f'{ROOT}/scripts/plot_trajectory.py'
    output:
        plot=f"{FOLDER}/{{simulator}}/replicate_{{scaling}}.pdf"
    shell:
        'python3 {input.script} --input {input.exp} --output {output.plot}'

rule plot_scatter:
    input:
        exp=expand(rules.run_simulations.output.tsv, scaling=REPLICATES, simulator=config["simulators"]),
        script=f'{ROOT}/scripts/plot_scatter.py'
    output:
        plot=f"{FOLDER}/plot_scatter.pdf"
    threads: len(config["simulators"])
    shell:
        'python3 {input.script} --folder {FOLDER} --output {output.plot}'

rule plot_scatter_stats:
    input:
        exp=expand(rules.run_simulations.output.tsv, scaling=REPLICATES, simulator=config["simulators"]),
        script=f'{ROOT}/scripts/plot_scatter_stats.py'
    output:
        plot=f"{FOLDER}/plot_scatter_stats.pdf"
    threads: len(config["simulators"])
    shell:
        'python3 {input.script} --folder {FOLDER} --output {output.plot}'
